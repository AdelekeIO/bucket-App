{"remainingRequest":"/opt/lampp/htdocs/bucket/node_modules/vue-loader/lib/index.js??vue-loader-options!/opt/lampp/htdocs/bucket/src/components/Login.vue?vue&type=script&lang=js&","dependencies":[{"path":"/opt/lampp/htdocs/bucket/src/components/Login.vue","mtime":1565631340832},{"path":"/opt/lampp/htdocs/bucket/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/opt/lampp/htdocs/bucket/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/opt/lampp/htdocs/bucket/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/opt/lampp/htdocs/bucket/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport axios from 'axios';\n\nconst config = {\n  headers: {\n    'Content-Type': 'application/x-www-form-urlencoded'\n  }\n}\n\nexport default {\n  name: 'Login',\n  props: {\n    msg: String\n  },\n  data(){\n    return{\n      email:'',\n      password: '',\n      msgs:[{\n        message:\"\",\n        status:\"\"\n      }]\n      \n    }\n  },\n  methods:{\n    processLogin(){\n      \n      if (this.email.length<=0 || this.email.trim===\"\") {\n        // alert(\"babu\");\n        this.msgs.message=\"User email is required\";\n        this.msgs.status=\"false\";\n        // console.log(this.msgs);\n        \n      return;\n      }else\n\n      if (this.password.length<=0 || this.email.trim===\"\") {\n        this.msgs.message=\"User password is required\";\n        this.msgs.status=\"false\";\n        // console.log(this.msgs);\n        \n      return;\n      }else{\n\n        const loginDeatails = {\n        email: this.email,\n        password: this.password\n        }\n        var fd = new FormData();\n        fd.append('email', loginDeatails.email);\n        fd.append('password', loginDeatails.password);\n\n        axios.post('http://127.0.0.1:3000/auth/login?',fd,config)\n        .then(res =>{\n          // console.log(res.data);\n          var status=res.data.status;\n          var token=res.data.data;\n          var message=res.data.message;\n        \n          \n          if(status===true){\n              localStorage.setItem('token',token);\n              this.msgs.message=message;\n              this.msgs.status=status;\n              this.$router.replace('/Dashboard');\n          }                 \n        })\n        .catch(err =>{\n          alert(err);\n        });\n        \n      }\n      \n    }\n  }\n}\n",{"version":3,"sources":["Login.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkDA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA","file":"Login.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div class=\"app flex-row align-items-center mt-5\" >\n    <div class=\"container\">\n      <b-row class=\"justify-content-center\">\n        <b-col md=\"8\">\n          <b-card-group>\n            <b-card no-body class=\"p-4\">\n              <b-card-body>\n                <b-form>\n                  <h1>Login</h1>\n                  <p class=\"text-muted\">Sign In to your account</p>\n                  <div class=\"alert  msgs\" v-bind:class=\"[msgs['status']=='true' ? 'alert-success' :'', msgs['status']=='false' ? 'alert-danger':'']\" id=\"msgs\">{{msgs['message']}}</div>\n                  <!-- <div class=\"alert  msgs\" v-bind:class=\"[msgs['status']=='true' ? 'alert-success' :'', msgs['status']=='false' ? 'alert-danger':'']\" id=\"msgs\">{{msgs['message']}}</div> -->\n                  <!-- <div class=\"alert d-none  msgs\" v-bind:class=\"{'alert-danger':this.error_msg}\" id=\"msgs\">{{error_msg}}</div> -->\n                  <b-input-group class=\"mb-3\">\n                    <b-input-group-prepend><b-input-group-text><i class=\"icon-user\"></i></b-input-group-text></b-input-group-prepend>\n                    <b-form-input type=\"text\" v-model=\"email\" required=\"\" name=\"email\" class=\"form-control\" placeholder=\"Username\" autocomplete=\"username email\" />\n                  </b-input-group>\n                  <b-input-group class=\"mb-4\">\n                    <b-input-group-prepend><b-input-group-text><i class=\"icon-lock\"></i></b-input-group-text></b-input-group-prepend>\n                    <b-form-input type=\"password\" v-model=\"password\" required=\"\" name=\"password\" class=\"form-control\" placeholder=\"Password\" autocomplete=\"current-password\" />\n                  </b-input-group>\n                  <b-row>\n                    <b-col cols=\"6\">\n                      <b-button variant=\"primary\" @click=\"processLogin\" class=\"px-4\">Login</b-button>\n                    </b-col>\n                    <b-col cols=\"6\" class=\"text-right\">\n                      <!-- <b-button variant=\"link\" class=\"px-0\">Forgot password?</b-button> -->\n                    </b-col>\n                  </b-row>\n                </b-form>\n              </b-card-body>\n            </b-card>\n            <b-card no-body class=\"text-white bg-primary py-5 d-md-down-none\" style=\"width:44%\">\n              <b-card-body class=\"text-center\">\n                <div>\n                  <h2>Sign up</h2>\n                  <p>Bucket Is an application that models real life bucket where by users can create bucket, add item to it, manage and delete items in the bucket and even the bucket.</p>\n                  <router-link to=\"/register\"><b-button variant=\"primary\" class=\"active mt-3\">Register Now!</b-button></router-link>\n                </div>\n              </b-card-body>\n            </b-card>\n          </b-card-group>\n        </b-col>\n      </b-row>\n    </div>\n  </div>\n</template>\n\n<script>\nimport axios from 'axios';\n\nconst config = {\n  headers: {\n    'Content-Type': 'application/x-www-form-urlencoded'\n  }\n}\n\nexport default {\n  name: 'Login',\n  props: {\n    msg: String\n  },\n  data(){\n    return{\n      email:'',\n      password: '',\n      msgs:[{\n        message:\"\",\n        status:\"\"\n      }]\n      \n    }\n  },\n  methods:{\n    processLogin(){\n      \n      if (this.email.length<=0 || this.email.trim===\"\") {\n        // alert(\"babu\");\n        this.msgs.message=\"User email is required\";\n        this.msgs.status=\"false\";\n        // console.log(this.msgs);\n        \n      return;\n      }else\n\n      if (this.password.length<=0 || this.email.trim===\"\") {\n        this.msgs.message=\"User password is required\";\n        this.msgs.status=\"false\";\n        // console.log(this.msgs);\n        \n      return;\n      }else{\n\n        const loginDeatails = {\n        email: this.email,\n        password: this.password\n        }\n        var fd = new FormData();\n        fd.append('email', loginDeatails.email);\n        fd.append('password', loginDeatails.password);\n\n        axios.post('http://127.0.0.1:3000/auth/login?',fd,config)\n        .then(res =>{\n          // console.log(res.data);\n          var status=res.data.status;\n          var token=res.data.data;\n          var message=res.data.message;\n        \n          \n          if(status===true){\n              localStorage.setItem('token',token);\n              this.msgs.message=message;\n              this.msgs.status=status;\n              this.$router.replace('/Dashboard');\n          }                 \n        })\n        .catch(err =>{\n          alert(err);\n        });\n        \n      }\n      \n    }\n  }\n}\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\n\n</style>\n"]}]}